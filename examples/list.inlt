
type Atom: +
type List: +

agent['a] A(Atom'a)
agent['a] B(Atom'a)
agent['a] C(Atom'a)

agent['a] Nil(List'a)
agent['a < 'b] Cons(List'b, !Atom'a, !List'a)

agent['a < 'b] Append(!List'a, !List'a, List'b)

rule Nil(_) Append(_, x, x) {}

rule Cons(_, x, xs) Append(_, ys, o) {
  Append(xs, ys, t)
  Cons(o, x, t)
}

type DiffList: +

agent['a | 'a? <= 'c, 'b < 'c] Diff(DiffList'a, List'b, !List'c)
agent['a < 'b] Open(!DiffList'a, !List'a, List'b)

rule Diff(_, x, y) Open(_, x, y) {}

net['a < 'b] diff_append(x: !DiffList'a, y: !DiffList'a, out: DiffList'a) {
  Diff(out, a, c)
  Open(x, a, b)
  Open(y, b, c)
}
