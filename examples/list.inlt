
type Atom: +
type List: +

agent['a] A(Atom'a)
agent['a] B(Atom'a)
agent['a] C(Atom'a)

agent['a] Nil(List'a)
agent['a < 'b] Cons(List'b, !Atom'a, !List'a)

agent['a < 'b] Append(!List'a, !List'a, List'b)

rule Nil(_) Append(_, x, x) {}

rule Cons(_, x, xs) Append(_, ys, o) {
  Append(xs, ys, t)
  Cons(o, x, t)
}

type DiffList: +

agent['a < 'b? < 'c?] Diff(DiffList'a, !List'b, List'c)
agent['a < 'b < 'c] Open(!DiffList'a, List'b, !List'c)

rule Diff(_, x, y) Open(_, x, y) {}

agent['a < 'b] DiffAppend(!DiffList'a, !DiffList'a, DiffList'b)

rule Diff(_, x, y) DiffAppend(_, a, b) {
  Open(a, y, t)
  Diff(b, x, t)
}
